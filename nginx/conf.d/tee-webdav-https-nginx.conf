# /etc/nginx/conf.d/webdav-teevity.conf
server {
    listen 80;
    listen 443 ssl;
    http2 on;
    server_name webdav.teevity.com;

    # TLS â€” make sure the cert matches webdav.teevity.com
    ssl_certificate     /etc/letsencrypt/live/teevity.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/teevity.com/privkey.pem;

    # Access / error logs
    access_log /var/log/nginx/webdav.access.log;
    error_log  /var/log/nginx/webdav.error.log warn;

    # Forward everything at "/" to Apache root (no /webdav prefix anymore)
    location / {
        proxy_pass http://teevity-apache/;   # no trailing /webdav
        proxy_http_version 1.1;

        # Use empty Connection header to avoid adding "close"
        proxy_set_header Connection "";

        # Preserve important headers for DAV and auth
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        # Forward authorization header
        proxy_set_header Authorization $http_authorization;

        # Preserve WebDAV-specific headers intact (Depth, Destination, Overwrite, If)
        proxy_set_header Depth $http_depth;
        proxy_set_header Destination $http_destination;
        proxy_set_header Overwrite $http_overwrite;
        proxy_set_header If $http_if;

        # Keep streaming uploads working (do not buffer request body)
        client_max_body_size 10G;
        proxy_request_buffering off;
        proxy_buffering off;

        # Let upstream handle Expect / TE / chunked transfers
        proxy_set_header Expect $http_expect;
        proxy_set_header TE $http_te;

        # Do not rewrite Location headers from Apache
        proxy_redirect off;
        absolute_redirect off;
    }
}
