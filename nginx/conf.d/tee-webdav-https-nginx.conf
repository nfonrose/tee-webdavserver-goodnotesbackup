server {
  listen 80;
  listen 443 ssl http2;
  server_name webdav.teevity.com;

  # TLS — make sure the cert matches webdav.teevity.com
  ssl_certificate     /etc/letsencrypt/live/teevity.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/teevity.com/privkey.pem;

  # If some clients can’t set a URL prefix, expose WebDAV at "/" while
  # still hitting Apache’s /webdav location.
  location / {
    proxy_pass http://teevity-apache/webdav/;  # trailing slash important
    proxy_http_version 1.1;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port  $server_port;
    proxy_set_header Connection "";

    # WebDAV uploads & props
    client_max_body_size 10G;
    proxy_request_buffering off;
    proxy_buffering off;
    chunked_transfer_encoding off;

    # Pass Destination exactly as Apache expects (normalize https→http for backend
    # and preserve nonstandard external port like :7543 that clients send).
    set $fixed_destination $http_destination;
    if ($http_destination ~* ^https(.*)$) {
      set $fixed_destination http$1;
    }
    proxy_set_header Destination $fixed_destination;

    # Don’t rewrite Location/absolute URLs (important when using :7543 externally)
    proxy_redirect off;
    absolute_redirect off;
  }

  access_log /var/log/nginx/webdav.access.log;
  error_log  /var/log/nginx/webdav.error.log warn;
}